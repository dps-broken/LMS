import React, { useState, useEffect } from 'react';
import axiosInstance from '../../api/axios';
import toast from 'react-hot-toast';
import { Table, Badge } from 'react-bootstrap';
import { format } from 'date-fns';
import Loader from '../../components/common/Loader.jsx';

/**
 * A read-only page for admins to view a log of all documents issued to students.
 */
const IssuanceLog = () => {
    const [documents, setDocuments] = useState([]);
    const [loading, setLoading] = useState(true);

    useEffect(() => {
        const fetchDocuments = async () => {
            setLoading(true);
            try {
                // The same endpoint used by ManageDocuments can be used here.
                const { data } = await axiosInstance.get('/api/admin/documents');
                setDocuments(data);
            } catch (error) {
                toast.error("Failed to fetch the document issuance log.");
            } finally {
                setLoading(false);
            }
        };
        fetchDocuments();
    }, []);

    if (loading) return <Loader />;

    return (
        <div>
            <h1>Document Issuance Log</h1>
            <p className="text-muted">A complete history of all certificates and offer letters generated by the system.</p>

            <Table striped bordered hover responsive className="mt-4">
                <thead>
                    <tr>
                        <th>Document ID</th>
                        <th>Student Name</th>
                        <th>Document Type</th>
                        <th>Document Title</th>
                        <th>Issue Date</th>
                    </tr>
                </thead>
                <tbody>
                    {documents.length > 0 ? (
                        documents.map(doc => (
                            <tr key={doc._id}>
                                <td>
                                    <Badge bg="secondary">{doc._id}</Badge>
                                </td>
                                <td>{doc.student?.fullName || 'N/A (Student Deleted)'}</td>
                                <td className="text-capitalize">
                                    {doc.type === 'offer_letter' 
                                        ? <Badge bg="primary">Offer Letter</Badge> 
                                        : <Badge bg="success">Certificate</Badge>
                                    }
                                </td>
                                <td>{doc.title}</td>
                                <td>{format(new Date(doc.issueDate), 'PPP p')}</td>
                            </tr>
                        ))
                    ) : (
                        <tr>
                            <td colSpan="5" className="text-center">No documents have been issued yet.</td>
                        </tr>
                    )}
                </tbody>
            </Table>
        </div>
    );
};

export default IssuanceLog;